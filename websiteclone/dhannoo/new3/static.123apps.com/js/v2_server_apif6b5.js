window.ServerAPI=function(){var e,o={site_id:_.glob_val("site_id"),uid:_.glob_val("uid"),s_lib_url:null,s_connect_url:null,lazy_load:!1,callbacks:{onConnect:function(){}}},n=["encode","join","acutterpro","open_remote"],t={},r=!1,c={onProgress:function(e){_.l("Encode progress: "+e+"%")},onStart:function(){_.l("Encode started")},onComplete:function(e){_.l("Encoding complete",e)},onError:function(e){_.l("Encode error",e)},onAuthRequest:function(e){_.l("auth request",e)},onMessage:function(e,o){_.l("Message",e,o)}};function s(e){_.l_func(),r?e&&e():"function"==typeof io?a(e):_.loadJS(o.s_lib_url,(function(){_.l("socket.io.js loaded"),a(e)}))}function a(e){function t(){"undefined"!=typeof io?(window.socket=io(o.s_connect_url),socket.on("connect",(function(){_.l("socket connect",o.s_connect_url),_.run_cb(o.callbacks.onConnect),_.run_cb(e)})),socket.on("disconnect",(function(){_.e("socket disconnect")})),socket.on("reconnect",u),n.forEach((function(e){socket.on(e,i)})),r=!0):_.e("io is undefined")}_.l_func(),"complete"==document.readyState||"interactive"==document.readyState?t():document.addEventListener("DOMContentLoaded",t)}function i(e){var o=t[e.operation_id];switch(e.message_type){case"progress":e.pid>0&&(o.pid=e.pid),0==o.progress_count&&_.run_cb(o.callbacks.onStart),o.progress_count++,o.last_progress_value=parseInt(e.progress_value),_.run_cb(o.callbacks.onProgress,o.last_progress_value);break;case"final_result":o.progress_count=0,o.status="finished",_.run_cb(o.callbacks.onComplete,e);break;case"error":_.e("Encode Error",e),o.status="error",_.run_cb(o.callbacks.onError,e);break;case"http_auth_request":_.run_cb(o.callbacks.onAuthRequest,e);break;default:_.run_cb(o.callbacks.onMessage,e)}}function l(n,r,a){_.l("ServerAPI "+a+", operation_id: "+i,n);var i=(new Date).getTime()+"_"+Math.random().toString(36).substr(2,10);return e=i,a=a||"encode",s((function(){var e=Object.assign({site_id:o.site_id,uid:o.uid,operation_id:i},n);t[i]={callbacks:"object"==typeof r?r:c,pid:null,progress_count:0,params:e,status:"started",action_type:a,last_progress_value:0},socket.connected?socket.emit(a,e):(t[i].callbacks.onError({message_type:"error",error_desc:"socket not connected",error_type:a+"encode_error",operation_id:i}),t[i].status="failed")})),i}function u(){var e=[];for(var n in t)"started"==t[n].status&&e.push(t[n]);e.forEach(e=>{_.l("Restoring operation: "+e.params.operation_id,e),socket.emit("restore_operation",{site_id:o.site_id,operation_id:e.params.operation_id,pid:e.pid,action_type:e.action_type,last_progress_value:e.last_progress_value})})}var d={init:function(e){_.l("ServerAPI init",e),(o=Object.assign(o,e)).s_connect_url||(o.s_connect_url=self.location.protocol+"//"+_.glob_val("s_encoder")),o.s_lib_url||(o.s_lib_url="//"+_.glob_val("static_host")+"/js/socket.io.js"),o.lazy_load||s()},cancel:function(n){n=n||e,t.hasOwnProperty(n)?(t[n].status="canceled",socket.emit("cancel_operation",{site_id:o.site_id,operation_id:n,pid:t[n].pid})):_.e("no operation found")}};return n.forEach((function(e){d[e]=function(o,n){return l(o,n,e)}})),d}();